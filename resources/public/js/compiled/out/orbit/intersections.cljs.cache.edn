;; Analyzed by ClojureScript 1.8.34
{:use-macros nil, :excludes #{}, :name orbit.intersections, :imports nil, :requires {orbit.common orbit.common}, :uses {earth-radius orbit.common, expt orbit.common, sqrt orbit.common}, :defs {quatratic-equation-has-roots? {:protocol-inline nil, :meta {:file "/Users/jaakko.leikko/git/orbital-solution/src/orbit/intersections.cljs", :line 30, :column 7, :end-line 30, :end-column 36, :arglists (quote ([a b c]))}, :name orbit.intersections/quatratic-equation-has-roots?, :variadic false, :file "src/orbit/intersections.cljs", :end-column 36, :method-params ([a b c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 3, :fn-var true, :arglists (quote ([a b c]))}, get-one-quatratic-equation-root {:protocol-inline nil, :meta {:file "/Users/jaakko.leikko/git/orbital-solution/src/orbit/intersections.cljs", :line 33, :column 7, :end-line 33, :end-column 38, :arglists (quote ([a b c]))}, :name orbit.intersections/get-one-quatratic-equation-root, :variadic false, :file "src/orbit/intersections.cljs", :end-column 38, :method-params ([a b c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 3, :fn-var true, :arglists (quote ([a b c]))}, get-a {:protocol-inline nil, :meta {:file "/Users/jaakko.leikko/git/orbital-solution/src/orbit/intersections.cljs", :line 4, :column 7, :end-line 4, :end-column 12, :arglists (quote ([x1 x2 y1 y2 z1 z2]))}, :name orbit.intersections/get-a, :variadic false, :file "src/orbit/intersections.cljs", :end-column 12, :method-params ([x1 x2 y1 y2 z1 z2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 6, :fn-var true, :arglists (quote ([x1 x2 y1 y2 z1 z2]))}, get-x {:protocol-inline nil, :meta {:file "/Users/jaakko.leikko/git/orbital-solution/src/orbit/intersections.cljs", :line 21, :column 7, :end-line 21, :end-column 12, :arglists (quote ([x1 x2 t]))}, :name orbit.intersections/get-x, :variadic false, :file "src/orbit/intersections.cljs", :end-column 12, :method-params ([x1 x2 t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 3, :fn-var true, :arglists (quote ([x1 x2 t]))}, is-intersection-between-points? {:protocol-inline nil, :meta {:file "/Users/jaakko.leikko/git/orbital-solution/src/orbit/intersections.cljs", :line 42, :column 7, :end-line 42, :end-column 38, :arglists (quote ([x1 x2 y1 y2 z1 z2 a b c]))}, :name orbit.intersections/is-intersection-between-points?, :variadic false, :file "src/orbit/intersections.cljs", :end-column 38, :method-params ([x1 x2 y1 y2 z1 z2 a b c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 9, :fn-var true, :arglists (quote ([x1 x2 y1 y2 z1 z2 a b c]))}, get-z {:protocol-inline nil, :meta {:file "/Users/jaakko.leikko/git/orbital-solution/src/orbit/intersections.cljs", :line 27, :column 7, :end-line 27, :end-column 12, :arglists (quote ([z1 z2 t]))}, :name orbit.intersections/get-z, :variadic false, :file "src/orbit/intersections.cljs", :end-column 12, :method-params ([z1 z2 t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 3, :fn-var true, :arglists (quote ([z1 z2 t]))}, get-b {:protocol-inline nil, :meta {:file "/Users/jaakko.leikko/git/orbital-solution/src/orbit/intersections.cljs", :line 9, :column 7, :end-line 9, :end-column 12, :arglists (quote ([x1 x2 y1 y2 z1 z2]))}, :name orbit.intersections/get-b, :variadic false, :file "src/orbit/intersections.cljs", :end-column 12, :method-params ([x1 x2 y1 y2 z1 z2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 6, :fn-var true, :arglists (quote ([x1 x2 y1 y2 z1 z2]))}, is-between? {:protocol-inline nil, :meta {:file "/Users/jaakko.leikko/git/orbital-solution/src/orbit/intersections.cljs", :line 36, :column 7, :end-line 36, :end-column 18, :arglists (quote ([target value1 value2]))}, :name orbit.intersections/is-between?, :variadic false, :file "src/orbit/intersections.cljs", :end-column 18, :method-params ([target value1 value2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 3, :fn-var true, :arglists (quote ([target value1 value2]))}, get-y {:protocol-inline nil, :meta {:file "/Users/jaakko.leikko/git/orbital-solution/src/orbit/intersections.cljs", :line 24, :column 7, :end-line 24, :end-column 12, :arglists (quote ([y1 y2 t]))}, :name orbit.intersections/get-y, :variadic false, :file "src/orbit/intersections.cljs", :end-column 12, :method-params ([y1 y2 t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 3, :fn-var true, :arglists (quote ([y1 y2 t]))}, get-c {:protocol-inline nil, :meta {:file "/Users/jaakko.leikko/git/orbital-solution/src/orbit/intersections.cljs", :line 14, :column 7, :end-line 14, :end-column 12, :arglists (quote ([x1 y1 z1 r]))}, :name orbit.intersections/get-c, :variadic false, :file "src/orbit/intersections.cljs", :end-column 12, :method-params ([x1 y1 z1 r]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 4, :fn-var true, :arglists (quote ([x1 y1 z1 r]))}, is-earth-between? {:protocol-inline nil, :meta {:file "/Users/jaakko.leikko/git/orbital-solution/src/orbit/intersections.cljs", :line 52, :column 7, :end-line 52, :end-column 24, :arglists (quote ([points]))}, :name orbit.intersections/is-earth-between?, :variadic false, :file "src/orbit/intersections.cljs", :end-column 24, :method-params ([points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 1, :fn-var true, :arglists (quote ([points]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:y :z :x}, :order [:x :y :z]}, :doc nil}