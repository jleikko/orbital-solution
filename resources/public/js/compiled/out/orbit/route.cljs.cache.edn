;; Analyzed by ClojureScript 1.8.34
{:use-macros nil, :excludes #{}, :name orbit.route, :imports nil, :requires {orbit.common orbit.common, orbit.intersections orbit.intersections}, :uses {list-complement orbit.common, is-earth-between? orbit.intersections}, :defs {hop? {:name orbit.route/hop?, :file "/Users/jaakko.leikko/git/orbital-solution/src/orbit/route.cljs", :line 5, :column 1, :end-line 5, :end-column 10, :meta {:file "/Users/jaakko.leikko/git/orbital-solution/src/orbit/route.cljs", :line 5, :column 6, :end-line 5, :end-column 10}}, find-routes {:protocol-inline nil, :meta {:file "/Users/jaakko.leikko/git/orbital-solution/src/orbit/route.cljs", :line 10, :column 7, :end-line 10, :end-column 18, :arglists (quote ([data] [data tail])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([data] [data tail]), :arglists ([data] [data tail]), :arglists-meta (nil nil)}}, :name orbit.route/find-routes, :variadic false, :file "/Users/jaakko.leikko/git/orbital-solution/src/orbit/route.cljs", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([data] [data tail]), :arglists ([data] [data tail]), :arglists-meta (nil nil)}, :method-params ([data] [data tail]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 2, :fn-var true, :arglists ([data] [data tail])}, pick-optimal {:protocol-inline nil, :meta {:file "/Users/jaakko.leikko/git/orbital-solution/src/orbit/route.cljs", :line 34, :column 7, :end-line 34, :end-column 19, :arglists (quote ([routes]))}, :name orbit.route/pick-optimal, :variadic false, :file "/Users/jaakko.leikko/git/orbital-solution/src/orbit/route.cljs", :end-column 19, :method-params ([routes]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 1, :fn-var true, :arglists (quote ([routes]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:phones :id :called :calling :sats}, :order [:calling :phones :id :sats :called]}, :doc nil}