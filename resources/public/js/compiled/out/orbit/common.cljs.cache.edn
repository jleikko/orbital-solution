;; Analyzed by ClojureScript 1.8.34
{:name orbit.common, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses {difference clojure.set}, :requires {clojure.set clojure.set}, :imports nil, :defs {earth-radius {:name orbit.common/earth-radius, :file "/Users/jaakko.leikko/git/orbital-solution/src/orbit/common.cljs", :line 7, :column 1, :end-line 7, :end-column 18, :meta {:file "/Users/jaakko.leikko/git/orbital-solution/src/orbit/common.cljs", :line 7, :column 6, :end-line 7, :end-column 18}}, machine-epsilon {:name orbit.common/machine-epsilon, :file "/Users/jaakko.leikko/git/orbital-solution/src/orbit/common.cljs", :line 9, :column 1, :end-line 9, :end-column 21, :meta {:file "/Users/jaakko.leikko/git/orbital-solution/src/orbit/common.cljs", :line 9, :column 6, :end-line 9, :end-column 21}}, data-file-url {:name orbit.common/data-file-url, :file "/Users/jaakko.leikko/git/orbital-solution/src/orbit/common.cljs", :line 11, :column 1, :end-line 11, :end-column 19, :meta {:file "/Users/jaakko.leikko/git/orbital-solution/src/orbit/common.cljs", :line 11, :column 6, :end-line 11, :end-column 19}}, phone-altitude {:name orbit.common/phone-altitude, :file "/Users/jaakko.leikko/git/orbital-solution/src/orbit/common.cljs", :line 13, :column 1, :end-line 13, :end-column 20, :meta {:file "/Users/jaakko.leikko/git/orbital-solution/src/orbit/common.cljs", :line 13, :column 6, :end-line 13, :end-column 20}}, approx= {:protocol-inline nil, :meta {:file "/Users/jaakko.leikko/git/orbital-solution/src/orbit/common.cljs", :line 18, :column 7, :end-line 18, :end-column 14, :arglists (quote ([x y])), :doc "Return true if the absolute value of the difference between x and y\n   is less than the machine epsilon. Otherwise returns false."}, :name orbit.common/approx=, :variadic false, :file "/Users/jaakko.leikko/git/orbital-solution/src/orbit/common.cljs", :end-column 14, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y])), :doc "Return true if the absolute value of the difference between x and y\n   is less than the machine epsilon. Otherwise returns false."}, get-double {:protocol-inline nil, :meta {:file "/Users/jaakko.leikko/git/orbital-solution/src/orbit/common.cljs", :line 24, :column 7, :end-line 24, :end-column 17, :arglists (quote ([array index]))}, :name orbit.common/get-double, :variadic false, :file "/Users/jaakko.leikko/git/orbital-solution/src/orbit/common.cljs", :end-column 17, :method-params ([array index]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 2, :fn-var true, :arglists (quote ([array index]))}, list-complement {:protocol-inline nil, :meta {:file "/Users/jaakko.leikko/git/orbital-solution/src/orbit/common.cljs", :line 27, :column 7, :end-line 27, :end-column 22, :arglists (quote ([main-list items-to-remove]))}, :name orbit.common/list-complement, :variadic false, :file "/Users/jaakko.leikko/git/orbital-solution/src/orbit/common.cljs", :end-column 22, :method-params ([main-list items-to-remove]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 2, :fn-var true, :arglists (quote ([main-list items-to-remove]))}, sqrt {:protocol-inline nil, :meta {:file "/Users/jaakko.leikko/git/orbital-solution/src/orbit/common.cljs", :line 30, :column 7, :end-line 30, :end-column 11, :arglists (quote ([x]))}, :name orbit.common/sqrt, :variadic false, :file "/Users/jaakko.leikko/git/orbital-solution/src/orbit/common.cljs", :end-column 11, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, expt {:protocol-inline nil, :meta {:file "/Users/jaakko.leikko/git/orbital-solution/src/orbit/common.cljs", :line 33, :column 7, :end-line 33, :end-column 11, :arglists (quote ([x]))}, :name orbit.common/expt, :variadic false, :file "/Users/jaakko.leikko/git/orbital-solution/src/orbit/common.cljs", :end-column 11, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}}}